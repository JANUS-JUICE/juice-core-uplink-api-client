{
    "openapi": "3.0.1",
    "info": {
        "title": "Juice Core Uplink API",
        "description": "An API to JUICE CORE uplink subsystem.",
        "contact": {
            "name": "JUICE Science Operations Centre",
            "email": "juice_soc@sciops.esa.int"
        },
        "license": {
            "name": "BSD License"
        },
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://juicesoc.esac.esa.int/"
        }
    ],
    "security": [
        {
            "JWT": []
        }
    ],
    "paths": {
        "/api-token-auth/": {
            "post": {
                "tags": [
                    "api-token-auth"
                ],
                "summary": "API View that receives a POST with a user's username and password.",
                "description": "Returns a JSON Web Token that can be used for authenticated requests.",
                "operationId": "post_api_token_auth",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JSONWebToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JSONWebToken"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/api-token-refresh/": {
            "post": {
                "tags": [
                    "api-token-refresh"
                ],
                "summary": "API View that returns a refreshed token (with new expiration) based on\nexisting token",
                "description": "If 'orig_iat' field (original issued-at-time) is found, will first check\nif it's within expiration window, then copy it to the new token",
                "operationId": "post_api_token_refresh",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshJSONWebToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshJSONWebToken"
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/rest_api/checks/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the consistency checks to be performed",
                "operationId": "get_checks",
                "responses": {
                    "200": {
                        "description": "Consistency checks list",
                        "content": {}
                    }
                }
            }
        },
        "/rest_api/checks/{working_group_mnemonic}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Checks the segment definition completeness of working group",
                "description": "Checks the segment definition completeness of working group",
                "operationId": "get_checks_by_working_group_mnemonic",
                "responses": {
                    "404": {
                        "description": "Error checking the completeness",
                        "content": {}
                    },
                    "200": {
                        "description": "List of segment definitions not valid",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "working_group_mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/checks/{working_group_mnemonic}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Checks the segment definition completeness of working group",
                "description": "Checks the segment definition completeness of working group",
                "operationId": "get_checks_by_working_group_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Error checking the completeness",
                        "content": {}
                    },
                    "200": {
                        "description": "List of segment definitions not valid",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "working_group_mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/checks{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the consistency checks to be performed",
                "operationId": "get_checks_by_format",
                "responses": {
                    "200": {
                        "description": "Consistency checks list",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/config/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the auxiliary configuration data",
                "operationId": "get_config",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Configuration"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/config{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the auxiliary configuration data",
                "operationId": "get_config_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Configuration"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/detailed_scenario/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of detailed scenarios",
                "description": "List the PUBLIC plans available in the system",
                "operationId": "get_detailed_scenario",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenarioList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Adds a new detailed scenario",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_detailed_scenario",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetailedScenario"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenario"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/rest_api/detailed_scenario/{id}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a detailed scenario",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "get_detailed_scenario_by_id",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenario"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Detailed scenario not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/detailed_scenario/{id}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a detailed scenario",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "get_detailed_scenario_by_id_and_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenario"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Detailed scenario not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/detailed_scenario{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of detailed scenarios",
                "description": "List the PUBLIC plans available in the system",
                "operationId": "get_detailed_scenario_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenarioList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Adds a new detailed scenario",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_detailed_scenario_by_format",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DetailedScenario"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenario"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/eps_package/": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a EPS package for a plan",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_eps_package",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Zip file with the eps package",
                        "content": {}
                    },
                    "401": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/rest_api/eps_package{format}": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a EPS package for a plan",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_eps_package_by_format",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Zip file with the eps package",
                        "content": {}
                    },
                    "401": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/events/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the geometry events of a trajectory",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* trajectory: the name of the trajectory\n* mnemonics: a list of the names of the events mnemonics",
                "operationId": "get_events",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "body",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/events{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the geometry events of a trajectory",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* trajectory: the name of the trajectory\n* mnemonics: a list of the names of the events mnemonics",
                "operationId": "get_events_by_format",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/fdyn_event/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the geometry events of a trajectory",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* trajectory: the name of the trajectory\n* mnemonics: a list of the names of the events mnemonics",
                "operationId": "get_fdyn_event",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FdynEvent"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/fdyn_event_definition/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the flight dynamics events definitions",
                "description": "List all the flight dynamics event definitions",
                "operationId": "get_fdyn_event_definition",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FdynEventDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/fdyn_event_definition{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the flight dynamics events definitions",
                "description": "List all the flight dynamics event definitions",
                "operationId": "get_fdyn_event_definition_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FdynEventDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/fdyn_event_file/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the EVTC file active",
                "description": "Retrieve the EVTC file active",
                "operationId": "get_fdyn_event_file",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FdynEventFile"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/fdyn_event_file{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the EVTC file active",
                "description": "Retrieve the EVTC file active",
                "operationId": "get_fdyn_event_file_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FdynEventFile"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/fdyn_event{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the geometry events of a trajectory",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* trajectory: the name of the trajectory\n* mnemonics: a list of the names of the events mnemonics",
                "operationId": "get_fdyn_event_by_format",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FdynEvent"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/file/{filename}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a file from SHT storage",
                "description": "Get a file saved in the SHT storage",
                "operationId": "get_file_by_filename",
                "responses": {
                    "400": {
                        "description": "The file requested is not available",
                        "content": {}
                    },
                    "200": {
                        "description": "TextFile",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "filename",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/file/{filename}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a file from SHT storage",
                "description": "Get a file saved in the SHT storage",
                "operationId": "get_file_by_filename_and_format",
                "responses": {
                    "400": {
                        "description": "The file requested is not available",
                        "content": {}
                    },
                    "200": {
                        "description": "TextFile",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "filename",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/git/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the hierarchy contents for Cruise Phase GIT",
                "description": "Get the hierarchy contents for Cruise Phase GIT",
                "operationId": "get_git",
                "responses": {
                    "400": {
                        "description": "The git is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "Hierarchy",
                        "content": {}
                    }
                }
            }
        },
        "/rest_api/git/branches": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the branches available for Cruise Phase GIT",
                "description": "Get the branches available for Cruise Phase GIT",
                "operationId": "get_git_branches",
                "responses": {
                    "400": {
                        "description": "The git is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "List of branches",
                        "content": {}
                    }
                }
            }
        },
        "/rest_api/git/branches{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the branches available for Cruise Phase GIT",
                "description": "Get the branches available for Cruise Phase GIT",
                "operationId": "get_git_branches_by_format",
                "responses": {
                    "400": {
                        "description": "The git is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "List of branches",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/git/{branch}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the hierarchy contents for Cruise Phase GIT",
                "description": "Get the hierarchy contents for Cruise Phase GIT",
                "operationId": "get_git_by_branch",
                "responses": {
                    "400": {
                        "description": "The git is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "Hierarchy",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "branch",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/git/{branch}/{hexsha}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the hierarchy contents for Cruise Phase git",
                "description": "Get the hierarchy contents for Cruise Phase git",
                "operationId": "get_git_by_branch_and_hexsha",
                "responses": {
                    "400": {
                        "description": "Git repository is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "Hierarchy",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "branch",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "hexsha",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/git/{branch}/{hexsha}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the hierarchy contents for Cruise Phase git",
                "description": "Get the hierarchy contents for Cruise Phase git",
                "operationId": "get_git_by_branch_and_hexsha_and_format",
                "responses": {
                    "400": {
                        "description": "Git repository is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "Hierarchy",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "branch",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "hexsha",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/git/{branch}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the hierarchy contents for Cruise Phase GIT",
                "description": "Get the hierarchy contents for Cruise Phase GIT",
                "operationId": "get_git_by_branch_and_format",
                "responses": {
                    "400": {
                        "description": "The git is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "Hierarchy",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "branch",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/git{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Get the hierarchy contents for Cruise Phase GIT",
                "description": "Get the hierarchy contents for Cruise Phase GIT",
                "operationId": "get_git_by_format",
                "responses": {
                    "400": {
                        "description": "The git is not available",
                        "content": {}
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {}
                    },
                    "200": {
                        "description": "Hierarchy",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/mode/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of modes",
                "description": "Get the list of modes",
                "operationId": "get_mode",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mode"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/mode{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of modes",
                "description": "Get the list of modes",
                "operationId": "get_mode_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Mode"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/observation_definition/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the observation definition identified by the mnemonic",
                "description": "Get the list of observation definitions available in the system",
                "operationId": "get_observation_definition",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObservationDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/observation_definition/{mnemonic}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the observation definition identified by the mnemonic",
                "description": "Get the observation definition details",
                "operationId": "get_observation_definition_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Observation Definition not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObservationDefinitionExtend"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/observation_definition/{mnemonic}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the observation definition identified by the mnemonic",
                "description": "Get the observation definition details",
                "operationId": "get_observation_definition_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Observation Definition not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObservationDefinitionExtend"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/observation_definition{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the observation definition identified by the mnemonic",
                "description": "Get the list of observation definitions available in the system",
                "operationId": "get_observation_definition_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObservationDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/pcw/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the Payload Checkout Window list",
                "description": "List all Payload Checkout Windows",
                "operationId": "get_pcw",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PayloadCheckoutWindow"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/pcw/units/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the Payload Checkout unit list",
                "description": "List all Payload Checkout units",
                "operationId": "get_pcw_units",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PayloadCheckoutUnit"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/pcw/units{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the Payload Checkout unit list",
                "description": "List all Payload Checkout units",
                "operationId": "get_pcw_units_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PayloadCheckoutUnit"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/pcw/{mnemonic}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the payload checkout window identified by the mnemonic",
                "description": "Get the Payload Checkout Window details",
                "operationId": "get_pcw_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Payload checkout window  not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayloadCheckoutWindow"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/pcw/{mnemonic}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the payload checkout window identified by the mnemonic",
                "description": "Get the Payload Checkout Window details",
                "operationId": "get_pcw_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Payload checkout window  not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayloadCheckoutWindow"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/pcw{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the Payload Checkout Window list",
                "description": "List all Payload Checkout Windows",
                "operationId": "get_pcw_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PayloadCheckoutWindow"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of available PUBLIC plans",
                "description": "List the PUBLIC plans available in the system",
                "operationId": "get_plan",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlanList"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Adds a new plan",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/rest_api/plan/{id}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "get_plan_by_id",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadOnlyPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Update a plan",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "put_plan_by_id",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Delete a plan",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "delete_plan_by_id",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan Not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan/{id}/ptr": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan PTR",
                "description": "Retrieve a PTR correspondig to a plan.",
                "operationId": "get_plan_ptr_by_id",
                "parameters": [
                    {
                        "name": "content",
                        "in": "query",
                        "description": "if \"link\" returns a JSON with the file link.if \"xml\" returns the file XML content.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "XML content or ptr link",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan/{id}/ptr{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan PTR",
                "description": "Retrieve a PTR correspondig to a plan.",
                "operationId": "get_plan_ptr_by_id_and_format",
                "parameters": [
                    {
                        "name": "content",
                        "in": "query",
                        "description": "if \"link\" returns a JSON with the file link.if \"xml\" returns the file XML content.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "XML content or ptr link",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan/{id}/stats": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Calculates time statistics of a plan.",
                "description": "Retrieves statistics for a plan.",
                "operationId": "get_plan_stats_by_id",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanStats"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan/{id}/stats{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Calculates time statistics of a plan.",
                "description": "Retrieves statistics for a plan.",
                "operationId": "get_plan_stats_by_id_and_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanStats"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan/{id}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "get_plan_by_id_and_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReadOnlyPlan"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "put": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Update a plan",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "put_plan_by_id_and_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "delete": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Delete a plan",
                "description": "Retrieve, update or delete a segmentation instance.",
                "operationId": "delete_plan_by_id_and_format",
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan Not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_ptr/": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a JSON file with the pointing information filled",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan_ptr",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "JSON file with the pointing information filled",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/rest_api/plan_ptr_skeleton/": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a XML PTR file with the pointing information filled",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan_ptr_skeleton",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "XML PTR file with the pointing information filled",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/rest_api/plan_ptr_skeleton{format}": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a XML PTR file with the pointing information filled",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan_ptr_skeleton_by_format",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "XML PTR file with the pointing information filled",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_ptr_xml/": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a XML PTR file with the pointing information filled",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan_ptr_xml",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "XML PTR file with the pointing information filled",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            }
        },
        "/rest_api/plan_ptr_xml{format}": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a XML PTR file with the pointing information filled",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan_ptr_xml_by_format",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "XML PTR file with the pointing information filled",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_ptr{format}": {
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Generates a JSON file with the pointing information filled",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan_ptr_by_format",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "JSON file with the pointing information filled",
                        "content": {}
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/groups/{id}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the groups information of a timeline",
                "description": "Returns the segment group information providing the segments belonging to a given segment group,\ntheir duration and the resources associated to the group",
                "operationId": "get_plan_simphony_groups_by_id",
                "responses": {
                    "200": {
                        "description": "Simphony Plan Serializer of groups",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/groups/{id}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the groups information of a timeline",
                "description": "Returns the segment group information providing the segments belonging to a given segment group,\ntheir duration and the resources associated to the group",
                "operationId": "get_plan_simphony_groups_by_id_and_format",
                "responses": {
                    "200": {
                        "description": "Simphony Plan Serializer of groups",
                        "content": {}
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/opps/{id}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan timeline for Simphony subsystem",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* mode: \"strict\" | \"open\" optional: \"open\" Includes the segments partially included in the period",
                "operationId": "get_plan_simphony_opps_by_id",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "strict",
                                "open"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimphonyPlanSwagger"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/opps/{id}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan timeline for Simphony subsystem",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* mode: \"strict\" | \"open\" optional: \"open\" Includes the segments partially included in the period",
                "operationId": "get_plan_simphony_opps_by_id_and_format",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "strict",
                                "open"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimphonyPlanSwagger"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/timeline/{id}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan timeline for Simphony subsystem",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* mode: \"strict\" | \"open\" optional: \"open\" Includes the segments partially included in the period",
                "operationId": "get_plan_simphony_timeline_by_id",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "strict",
                                "open"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimphonyPlanSwagger"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/timeline/{id}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan timeline for Simphony subsystem",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* mode: \"strict\" | \"open\" optional: \"open\" Includes the segments partially included in the period",
                "operationId": "get_plan_simphony_timeline_by_id_and_format",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "strict",
                                "open"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimphonyPlanSwagger"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/{id}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan timeline for Simphony subsystem",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* mode: \"strict\" | \"open\" optional: \"open\" Includes the segments partially included in the period",
                "operationId": "get_plan_simphony_by_id",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "strict",
                                "open"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimphonyPlanSwagger"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan_simphony/{id}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a plan timeline for Simphony subsystem",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* mode: \"strict\" | \"open\" optional: \"open\" Includes the segments partially included in the period",
                "operationId": "get_plan_simphony_by_id_and_format",
                "parameters": [
                    {
                        "name": "start",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "schema": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "strict",
                                "open"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimphonyPlanSwagger"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Plan not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plan{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of available PUBLIC plans",
                "description": "List the PUBLIC plans available in the system",
                "operationId": "get_plan_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlanList"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Adds a new plan",
                "description": "Adds a new plan to the trajectory",
                "operationId": "post_plan_by_format",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Plan"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Plan"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad request",
                        "content": {}
                    }
                },
                "x-codegen-request-body-name": "data"
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plnview_file/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of PLNVIEW sources",
                "description": "List all the uvt file sources",
                "operationId": "get_plnview_file",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlnViewFile"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/plnview_file{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the list of PLNVIEW sources",
                "description": "List all the uvt file sources",
                "operationId": "get_plnview_file_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlnViewFile"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/plnview_sessions/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the session passes of the active PLNVIEW",
                "description": "Get the event instances",
                "operationId": "get_plnview_sessions",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlnViewSession"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/plnview_sessions{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the session passes of the active PLNVIEW",
                "description": "Get the event instances",
                "operationId": "get_plnview_sessions_by_format",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlnViewSession"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/segment_definition/{mnemonic}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the segment definition identified by the mnemonic",
                "description": "List all segment definition",
                "operationId": "get_segment_definition_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Segment Definition not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/segment_definition/{mnemonic}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the segment definition identified by the mnemonic",
                "description": "List all segment definition",
                "operationId": "get_segment_definition_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Segment Definition not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SegmentDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/series/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a geometry series of a trajectory",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* trajectory: the name of the trajectory\n* series: the name of the series to be retrieved",
                "operationId": "get_series",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeriesData"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "body",
                    "in": "query",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/series{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a geometry series of a trajectory",
                "description": "Restricts the returned queries by filtering against a **body** query parameter in the URL.\nThe **body** expected value is the JSON string corresponding to the following structure:\n* start: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* end: the date formatted as ISO8601 in UTC scale (2030-07-05T01:44:47Z)\n* trajectory: the name of the trajectory\n* series: the name of the series to be retrieved",
                "operationId": "get_series_by_format",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeriesData"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/session_flush/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Flush the session",
                "operationId": "get_session_flush",
                "responses": {
                    "200": {
                        "description": "Session flushed",
                        "content": {}
                    }
                }
            }
        },
        "/rest_api/session_flush{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Flush the session",
                "operationId": "get_session_flush_by_format",
                "responses": {
                    "200": {
                        "description": "Session flushed",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the trajectory list",
                "description": "List all trajectory",
                "operationId": "get_trajectory",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrajectoryList"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/trajectory/{mnemonic}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the trajectory identified by the mnemonic",
                "description": "List all trajectory",
                "operationId": "get_trajectory_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trajectory"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/detailed_scenario": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the detailed scenarios belonging to the trajectory",
                "description": "List all the detailed scenarios belonging to the trajectory",
                "operationId": "get_trajectory_detailed_scenario_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenarioList"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/detailed_scenario{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the detailed scenarios belonging to the trajectory",
                "description": "List all the detailed scenarios belonging to the trajectory",
                "operationId": "get_trajectory_detailed_scenario_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DetailedScenarioList"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/engineering_segment_types": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the engineering segments belonging to the trajectory",
                "description": "List all engineering segments types of a trajectory",
                "operationId": "get_trajectory_engineering_segment_types_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EngineeringSegmentType"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/engineering_segment_types{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the engineering segments belonging to the trajectory",
                "description": "List all engineering segments types of a trajectory",
                "operationId": "get_trajectory_engineering_segment_types_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EngineeringSegmentType"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/engineering_segments": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the engineering segments belonging to the trajectory",
                "description": "List all engineering segments of a trajectory",
                "operationId": "get_trajectory_engineering_segments_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EngineeringSegment"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/engineering_segments{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the engineering segments belonging to the trajectory",
                "description": "List all engineering segments of a trajectory",
                "operationId": "get_trajectory_engineering_segments_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EngineeringSegment"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/event": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the events definitions applicable for the trajectory",
                "description": "List all the geometry event definitions applicable to the trajectory",
                "operationId": "get_trajectory_event_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeriesDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/event{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the events definitions applicable for the trajectory",
                "description": "List all the geometry event definitions applicable to the trajectory",
                "operationId": "get_trajectory_event_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeriesDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/plan": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the plans belonging to the trajectory",
                "description": "List all the plans belonging to the trajectory",
                "operationId": "get_trajectory_plan_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlanList"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/plan{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the plans belonging to the trajectory",
                "description": "List all the plans belonging to the trajectory",
                "operationId": "get_trajectory_plan_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PlanList"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/ptr": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a trajectory PTR",
                "description": "Retrieve a PTR corresponding to a trajectory.",
                "operationId": "get_trajectory_ptr_by_mnemonic",
                "parameters": [
                    {
                        "name": "content",
                        "in": "query",
                        "description": "if \"link\" returns a JSON with the file link.if \"xml\" returns the file XML content.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "XML content or ptr link",
                        "content": {}
                    },
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/ptr{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve a trajectory PTR",
                "description": "Retrieve a PTR corresponding to a trajectory.",
                "operationId": "get_trajectory_ptr_by_mnemonic_and_format",
                "parameters": [
                    {
                        "name": "content",
                        "in": "query",
                        "description": "if \"link\" returns a JSON with the file link.if \"xml\" returns the file XML content.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "XML content or ptr link",
                        "content": {}
                    },
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/segment_definition": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the segment definitions applicable for the trajectory",
                "description": "List all the segment definitions applicable to the trajectory",
                "operationId": "get_trajectory_segment_definition_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SegmentDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/segment_definition{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the segment definitions applicable for the trajectory",
                "description": "List all the segment definitions applicable to the trajectory",
                "operationId": "get_trajectory_segment_definition_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SegmentDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/series": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the series definitions applicable for the trajectory",
                "description": "List all the series applicable to the trajectory",
                "operationId": "get_trajectory_series_by_mnemonic",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeriesDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}/series{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the series definitions applicable for the trajectory",
                "description": "List all the series applicable to the trajectory",
                "operationId": "get_trajectory_series_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SeriesDefinition"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory/{mnemonic}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the trajectory identified by the mnemonic",
                "description": "List all trajectory",
                "operationId": "get_trajectory_by_mnemonic_and_format",
                "responses": {
                    "404": {
                        "description": "Trajectory not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Trajectory"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "mnemonic",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/trajectory{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the trajectory list",
                "description": "List all trajectory",
                "operationId": "get_trajectory_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrajectoryList"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/user/{username}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the user details by username",
                "description": "API endpoint that allows users to be viewed or edited.",
                "operationId": "get_user_by_username",
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "username",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/user/{username}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the user details by username",
                "description": "API endpoint that allows users to be viewed or edited.",
                "operationId": "get_user_by_username_and_format",
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "username",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/uvt_event/{source}/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the geometry events of a trajectory",
                "description": "Get the event instances",
                "operationId": "get_uvt_event_by_source",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UvtEvent"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "source",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/uvt_event/{source}{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the geometry events of a trajectory",
                "description": "Get the event instances",
                "operationId": "get_uvt_event_by_source_and_format",
                "responses": {
                    "400": {
                        "description": "body parameter not parseable or not present",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UvtEvent"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "source",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/uvt_event_file/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the uvt file sources",
                "description": "List all the uvt file sources",
                "operationId": "get_uvt_event_file",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UvtEventFile"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/uvt_event_file{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the uvt file sources",
                "description": "List all the uvt file sources",
                "operationId": "get_uvt_event_file_by_format",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UvtEventFile"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/rest_api/version/": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the api version",
                "description": "Retrieve the version of the api",
                "operationId": "get_version",
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiVersion"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rest_api/version{format}": {
            "get": {
                "tags": [
                    "rest_api"
                ],
                "summary": "Retrieve the api version",
                "description": "Retrieve the version of the api",
                "operationId": "get_version_by_format",
                "responses": {
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "404": {
                        "description": "User not found",
                        "content": {}
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiVersion"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "name": "format",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "JSONWebToken": {
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "Username",
                        "minLength": 1,
                        "type": "string"
                    },
                    "password": {
                        "title": "Password",
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "RefreshJSONWebToken": {
                "required": [
                    "token"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "title": "Token",
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "ConfigurationItem": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "Unit": {
                "required": [
                    "mnemonic",
                    "name",
                    "ratio"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "category": {
                        "title": "Category",
                        "type": "string",
                        "readOnly": true
                    },
                    "ratio": {
                        "title": "Ratio",
                        "type": "number"
                    }
                }
            },
            "InstrumentType": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "instrument_set": {
                        "uniqueItems": true,
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ResourceCategory": {
                "required": [
                    "category_type",
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "category_type": {
                        "title": "Category type",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "PlatformPowerProfile": {
                "required": [
                    "mnemonic",
                    "name",
                    "power"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "power": {
                        "title": "Power",
                        "type": "number"
                    }
                }
            },
            "Configuration": {
                "required": [
                    "version"
                ],
                "type": "object",
                "properties": {
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigurationItem"
                        }
                    },
                    "instruments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigurationItem"
                        }
                    },
                    "units": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Unit"
                        }
                    },
                    "instrument_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstrumentType"
                        }
                    },
                    "resource_categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceCategory"
                        }
                    },
                    "slew_policies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigurationItem"
                        }
                    },
                    "timelines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConfigurationItem"
                        }
                    },
                    "platform_power_profiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlatformPowerProfile"
                        }
                    },
                    "version": {
                        "title": "Version",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "DetailedScenarioList": {
                "required": [
                    "mnemonic",
                    "name",
                    "trajectory"
                ],
                "type": "object",
                "properties": {
                    "trajectory": {
                        "title": "Trajectory",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "created": {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "title": "Author",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "scenario_json_file": {
                        "title": "Scenario json file",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "start": {
                        "title": "Start",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "end": {
                        "title": "End",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DetailedScenario": {
                "required": [
                    "mnemonic",
                    "name",
                    "trajectory"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "trajectory": {
                        "title": "Trajectory",
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "scenario_json_file": {
                        "title": "Scenario json file",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "start": {
                        "title": "Start",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "end": {
                        "title": "End",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ResourceProfile": {
                "required": [
                    "category",
                    "instrument_type",
                    "target",
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "category": {
                        "title": "Category",
                        "type": "string"
                    },
                    "target": {
                        "title": "Target",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "type": "number",
                        "nullable": true
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string"
                    },
                    "instrument_type": {
                        "title": "Instrument type",
                        "type": "string"
                    }
                }
            },
            "InstrumentResourceProfile": {
                "required": [
                    "category",
                    "instrument",
                    "target",
                    "unit"
                ],
                "type": "object",
                "properties": {
                    "category": {
                        "title": "Category",
                        "type": "string"
                    },
                    "target": {
                        "title": "Target",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "type": "number",
                        "nullable": true
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string"
                    },
                    "instrument": {
                        "title": "Instrument",
                        "type": "string"
                    }
                }
            },
            "Segment": {
                "required": [
                    "end",
                    "instrument_overwritten",
                    "overwritten",
                    "segment_definition",
                    "start",
                    "timeline"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "title": "Start",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "end": {
                        "title": "End",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ResourceProfile"
                        }
                    },
                    "instrument_resources": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/InstrumentResourceProfile"
                        }
                    },
                    "segment_definition": {
                        "title": "Segment definition",
                        "type": "string"
                    },
                    "segment_group": {
                        "title": "Segment group",
                        "type": "string",
                        "nullable": true
                    },
                    "overwritten": {
                        "title": "Overwritten",
                        "type": "boolean"
                    },
                    "instrument_overwritten": {
                        "title": "Instrument overwritten",
                        "type": "boolean"
                    },
                    "timeline": {
                        "title": "Timeline",
                        "type": "string"
                    },
                    "platform_power_profile": {
                        "title": "Platform power profile",
                        "type": "string",
                        "nullable": true
                    },
                    "platform_power": {
                        "title": "Platform power",
                        "type": "number",
                        "nullable": true
                    },
                    "pointing_request_snippet": {
                        "title": "Pointing request snippet",
                        "minLength": 1,
                        "type": "string",
                        "nullable": true
                    },
                    "slew_policy": {
                        "title": "Slew policy",
                        "type": "string",
                        "nullable": true
                    },
                    "pointing_target": {
                        "title": "Pointing Target",
                        "maxLength": 256,
                        "type": "string",
                        "nullable": true
                    },
                    "scheduling_priority": {
                        "title": "Scheduling Priority",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer",
                        "nullable": true
                    },
                    "origin": {
                        "title": "Origin",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "prime": {
                        "title": "Prime",
                        "type": "string",
                        "nullable": true
                    },
                    "riders": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                }
            },
            "SegmentGroup": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ResourceProfile"
                        }
                    },
                    "instrument_resources": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/InstrumentResourceProfile"
                        }
                    },
                    "platform_power_profile": {
                        "title": "Platform power profile",
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Plan": {
                "required": [
                    "is_public",
                    "mnemonic",
                    "name",
                    "segment_groups",
                    "segments",
                    "trajectory"
                ],
                "type": "object",
                "properties": {
                    "trajectory": {
                        "title": "Trajectory",
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "boolean"
                    },
                    "segments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Segment"
                        }
                    },
                    "segment_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SegmentGroup"
                        }
                    },
                    "default_block": {
                        "title": "Default block",
                        "type": "string",
                        "readOnly": true
                    },
                    "default_slew_policy": {
                        "title": "Default slew policy",
                        "type": "string",
                        "readOnly": true
                    },
                    "spice_info": {
                        "title": "Spice info",
                        "type": "string",
                        "readOnly": true
                    },
                    "refine_log": {
                        "title": "Refine log",
                        "type": "string"
                    }
                }
            },
            "Event": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "title": "Start",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "end": {
                        "title": "End",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "definition": {
                        "title": "Definition",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "FdynEvent": {
                "required": [
                    "count",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "title": "Start",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "end": {
                        "title": "End",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "definition": {
                        "title": "Definition",
                        "type": "string",
                        "readOnly": true
                    },
                    "count": {
                        "title": "Count",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    }
                }
            },
            "FdynEventDefinition": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "title": "Category",
                        "type": "string",
                        "readOnly": true
                    },
                    "color": {
                        "title": "Timeline Color",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "FdynEventFile": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Mode": {
                "required": [
                    "mnemonic",
                    "name",
                    "payload"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "mapps_mode": {
                        "title": "MAPPS Mode",
                        "maxLength": 200,
                        "type": "string",
                        "nullable": true
                    },
                    "payload": {
                        "title": "Payload",
                        "type": "string"
                    },
                    "power": {
                        "title": "Nominal Power (W)",
                        "type": "number",
                        "nullable": true
                    },
                    "data_rate": {
                        "title": "Data rate (bps)",
                        "type": "number",
                        "nullable": true
                    },
                    "inactive": {
                        "title": "Inactive",
                        "type": "boolean"
                    },
                    "comments": {
                        "title": "Comments",
                        "maxLength": 100,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DataProfile": {
                "required": [
                    "event",
                    "mode",
                    "time"
                ],
                "type": "object",
                "properties": {
                    "event": {
                        "title": "Event",
                        "type": "string"
                    },
                    "time": {
                        "title": "Time",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mode": {
                        "title": "Mode",
                        "type": "string"
                    },
                    "data_rate": {
                        "title": "Data rate",
                        "type": "string",
                        "readOnly": true
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string",
                        "description": "Comment when exported to observation definition file",
                        "nullable": true
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PowerProfile": {
                "required": [
                    "event",
                    "mode",
                    "time"
                ],
                "type": "object",
                "properties": {
                    "event": {
                        "title": "Event",
                        "type": "string"
                    },
                    "time": {
                        "title": "Time",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mode": {
                        "title": "Mode",
                        "type": "string"
                    },
                    "power": {
                        "title": "Power",
                        "type": "string",
                        "readOnly": true
                    },
                    "comment": {
                        "title": "Comment",
                        "type": "string",
                        "description": "Comment when exported to observation definition file",
                        "nullable": true
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "ObservationDefinition": {
                "required": [
                    "mnemonic",
                    "name",
                    "payload",
                    "pointing_type",
                    "segment_definitions",
                    "target"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "nullable": true
                    },
                    "payload": {
                        "title": "Payload",
                        "type": "string"
                    },
                    "pointing_type": {
                        "title": "Pointing type",
                        "type": "string"
                    },
                    "target": {
                        "title": "Target",
                        "type": "string"
                    },
                    "data_profile": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DataProfile"
                        }
                    },
                    "power_profile": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PowerProfile"
                        }
                    },
                    "PTRSnippet_file": {
                        "title": "PTRSnippet file",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "ITLSnippet_file": {
                        "title": "ITLSnippet file",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "PTRSnippet": {
                        "title": "Default PTR Snippet",
                        "type": "string",
                        "nullable": true
                    },
                    "ITLSnippet": {
                        "title": "Default ITL Snippet",
                        "type": "string",
                        "nullable": true
                    },
                    "segment_definitions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ObservationDefinitionExtend": {
                "required": [
                    "AvoidanceRules",
                    "SchedulingRules",
                    "mnemonic",
                    "name",
                    "payload",
                    "pointing_type",
                    "segment_definitions",
                    "target"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "type": "string",
                        "nullable": true
                    },
                    "payload": {
                        "title": "Payload",
                        "type": "string"
                    },
                    "pointing_type": {
                        "title": "Pointing type",
                        "type": "string"
                    },
                    "target": {
                        "title": "Target",
                        "type": "string"
                    },
                    "data_profile": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/DataProfile"
                        }
                    },
                    "power_profile": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/PowerProfile"
                        }
                    },
                    "PTRSnippet_file": {
                        "title": "PTRSnippet file",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "ITLSnippet_file": {
                        "title": "ITLSnippet file",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "PTRSnippet": {
                        "title": "Default PTR Snippet",
                        "type": "string",
                        "nullable": true
                    },
                    "ITLSnippet": {
                        "title": "Default ITL Snippet",
                        "type": "string",
                        "nullable": true
                    },
                    "segment_definitions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "SchedulingRules": {
                        "title": "Scheduling Rules",
                        "minLength": 1,
                        "type": "string",
                        "description": "any rule that is used to schedule the observation: repetition rules, continuous (plasma instruments), one-off, every orbit, every day, etc"
                    },
                    "AvoidanceRules": {
                        "title": "Avoidance Rules",
                        "minLength": 1,
                        "type": "string",
                        "description": "conditions that make the observation not possible (e.g. thruster firing)"
                    },
                    "log": {
                        "title": "References",
                        "type": "string",
                        "nullable": true
                    },
                    "Comments": {
                        "title": "Comments",
                        "type": "string",
                        "nullable": true
                    },
                    "changeReason": {
                        "title": "ChangeReason",
                        "type": "string",
                        "nullable": true
                    },
                    "Support_Plot_1": {
                        "title": "Support Plot 1",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "Support_Plot_2": {
                        "title": "Support Plot 2",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "Support_Plot_3": {
                        "title": "Support Plot 3",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    }
                }
            },
            "PayloadCheckoutWindow": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "uevt_file": {
                        "title": "Uevt file",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "sevt_file": {
                        "title": "Sevt file",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "git_branch": {
                        "title": "Git branch",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "baseline": {
                        "title": "Baseline",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "start": {
                        "title": "Start",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "end": {
                        "title": "End",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "ref_event_name": {
                        "title": "Reference Event Name",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "ref_event_counter": {
                        "title": "Reference Event Counter",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PayloadCheckoutUnit": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "color": {
                        "title": "Color",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "instrument": {
                        "title": "Instrument",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "sub_instrument": {
                        "title": "Sub instrument",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PlanList": {
                "required": [
                    "is_public",
                    "mnemonic",
                    "name",
                    "trajectory"
                ],
                "type": "object",
                "properties": {
                    "trajectory": {
                        "title": "Trajectory",
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "created": {
                        "title": "Created",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "title": "Author",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "boolean"
                    },
                    "refine_log": {
                        "title": "Refine log",
                        "type": "string"
                    },
                    "ptr_file": {
                        "title": "Ptr file",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "ReadOnlyResourceProfile": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "instrument_type": {
                        "title": "Instrument type",
                        "type": "string",
                        "readOnly": true
                    },
                    "category": {
                        "title": "Category",
                        "type": "string",
                        "readOnly": true
                    },
                    "target": {
                        "title": "Target",
                        "type": "string",
                        "readOnly": true
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "readOnly": true
                    },
                    "value": {
                        "title": "Value",
                        "type": "number"
                    }
                }
            },
            "ReadOnlyInstrumentResourceProfile": {
                "required": [
                    "value"
                ],
                "type": "object",
                "properties": {
                    "instrument": {
                        "title": "Instrument",
                        "type": "string",
                        "readOnly": true
                    },
                    "category": {
                        "title": "Category",
                        "type": "string",
                        "readOnly": true
                    },
                    "target": {
                        "title": "Target",
                        "type": "string",
                        "readOnly": true
                    },
                    "unit": {
                        "title": "Unit",
                        "type": "string",
                        "readOnly": true
                    },
                    "value": {
                        "title": "Value",
                        "type": "number"
                    }
                }
            },
            "ReadOnlySegmentGroup": {
                "required": [
                    "instrument_resources",
                    "mnemonic",
                    "name",
                    "resources"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadOnlyResourceProfile"
                        }
                    },
                    "instrument_resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadOnlyInstrumentResourceProfile"
                        }
                    },
                    "platform_power_profile": {
                        "title": "Platform power profile",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "ReadOnlyPlan": {
                "required": [
                    "is_public",
                    "mnemonic",
                    "name",
                    "segment_groups",
                    "trajectory"
                ],
                "type": "object",
                "properties": {
                    "trajectory": {
                        "title": "Trajectory",
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "boolean"
                    },
                    "segments": {
                        "title": "Segments",
                        "type": "string",
                        "readOnly": true
                    },
                    "segment_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadOnlySegmentGroup"
                        }
                    },
                    "refine_log": {
                        "title": "Refine log",
                        "type": "string"
                    },
                    "spice_info": {
                        "title": "Spice info",
                        "type": "string",
                        "readOnly": true
                    },
                    "default_block": {
                        "title": "Default block",
                        "type": "string",
                        "readOnly": true
                    },
                    "default_slew_policy": {
                        "title": "Default slew policy",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "PlanStats": {
                "type": "object",
                "properties": {
                    "segment_number": {
                        "title": "Segment number",
                        "type": "string",
                        "readOnly": true
                    },
                    "group_number": {
                        "title": "Group number",
                        "type": "string",
                        "readOnly": true
                    },
                    "start": {
                        "title": "Start",
                        "type": "string",
                        "readOnly": true
                    },
                    "end": {
                        "title": "End",
                        "type": "string",
                        "readOnly": true
                    },
                    "stats": {
                        "title": "Stats",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "KernelFile": {
                "required": [
                    "mnemonic",
                    "name",
                    "path"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "path": {
                        "title": "Path",
                        "maxLength": 512,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "SpiceInfoSwagger": {
                "required": [
                    "kernels",
                    "metakernel",
                    "skd_version"
                ],
                "type": "object",
                "properties": {
                    "kernels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KernelFile"
                        }
                    },
                    "skd_version": {
                        "title": "Skd version",
                        "minLength": 1,
                        "type": "string"
                    },
                    "metakernel": {
                        "title": "Metakernel",
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "SimphonyPlanSwagger": {
                "required": [
                    "default_block",
                    "default_slew_policy",
                    "is_public",
                    "mnemonic",
                    "segment_opportunities",
                    "segment_timeline",
                    "spice_info",
                    "trajectory"
                ],
                "type": "object",
                "properties": {
                    "trajectory": {
                        "title": "Trajectory",
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "minLength": 1,
                        "type": "string"
                    },
                    "is_public": {
                        "title": "Is public",
                        "type": "boolean"
                    },
                    "segment_timeline": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Segment"
                        }
                    },
                    "segment_opportunities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Segment"
                        }
                    },
                    "spice_info": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SpiceInfoSwagger"
                        }
                    },
                    "default_block": {
                        "title": "Default block",
                        "minLength": 1,
                        "type": "string"
                    },
                    "default_slew_policy": {
                        "title": "Default slew policy",
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "PlnViewFile": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string"
                    }
                }
            },
            "PlnViewSession": {
                "required": [
                    "ground_station"
                ],
                "type": "object",
                "properties": {
                    "activity_start": {
                        "title": "Activity start",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "activity_end": {
                        "title": "Activity end",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "tracking_start": {
                        "title": "Tracking start",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "tracking_end": {
                        "title": "Tracking end",
                        "maxLength": 64,
                        "type": "string"
                    },
                    "ground_station": {
                        "title": "Ground station",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 128,
                        "type": "string"
                    },
                    "origin": {
                        "title": "Origin",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "SegmentDefinition": {
                "required": [
                    "mnemonic",
                    "name",
                    "observation_definitions",
                    "prime_segment",
                    "riders"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "resources": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/ResourceProfile"
                        }
                    },
                    "instrument_resources": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/InstrumentResourceProfile"
                        }
                    },
                    "group": {
                        "title": "Group",
                        "type": "string",
                        "readOnly": true
                    },
                    "riders": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "prime_segment": {
                        "title": "Prime Segment",
                        "type": "boolean"
                    },
                    "pointing_request_file": {
                        "title": "Pointing request file",
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "readOnly": true
                    },
                    "slew_policy": {
                        "title": "Slew policy",
                        "type": "string",
                        "readOnly": true
                    },
                    "pointing_target": {
                        "title": "Pointing Target",
                        "maxLength": 256,
                        "type": "string",
                        "nullable": true
                    },
                    "platform_power_profile": {
                        "title": "Platform power profile",
                        "type": "string",
                        "readOnly": true
                    },
                    "scheduler_flag": {
                        "title": "Scheduler Flag",
                        "type": "boolean",
                        "nullable": true
                    },
                    "scheduling_priority": {
                        "title": "Scheduling Priority",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer",
                        "nullable": true
                    },
                    "observation_definitions": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "color": {
                        "title": "Timeline Color",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "SeriesData": {
                "type": "object",
                "properties": {
                    "epoch": {
                        "title": "Epoch",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "title": "Value",
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "TrajectoryList": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "trajectory_type": {
                        "title": "Trajectory type",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Phase": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "start": {
                        "title": "Start date",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end": {
                        "title": "End date",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "Trajectory": {
                "required": [
                    "mnemonic",
                    "name",
                    "phases"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "id": {
                        "title": "ID",
                        "type": "integer",
                        "readOnly": true
                    },
                    "pt_context": {
                        "title": "Pt context",
                        "maxLength": 128,
                        "type": "string",
                        "nullable": true
                    },
                    "trajectory_type": {
                        "title": "Trajectory type",
                        "type": "string",
                        "readOnly": true
                    },
                    "phases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Phase"
                        }
                    },
                    "spice_info": {
                        "title": "Spice info",
                        "type": "string",
                        "readOnly": true
                    },
                    "ptr_file": {
                        "title": "Ptr file",
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    }
                }
            },
            "EngineeringSegmentType": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    },
                    "power": {
                        "title": "Power",
                        "type": "number",
                        "nullable": true
                    }
                }
            },
            "EngineeringSegment": {
                "required": [
                    "end",
                    "start"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "title": "Start",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "end": {
                        "title": "End",
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string"
                    },
                    "segment_type": {
                        "title": "Segment type",
                        "type": "string",
                        "readOnly": true
                    },
                    "power": {
                        "title": "Power",
                        "type": "number",
                        "readOnly": true
                    },
                    "segment_type_raw": {
                        "title": "Segment type raw",
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "SeriesDefinition": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "unit": {
                        "title": "Unit",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "title": "Category",
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "WorkingGroupMembership": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "working_group": {
                        "title": "Working group",
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "enum": [
                            "LEADER",
                            "MEMBER"
                        ]
                    }
                }
            },
            "InstrumentMembership": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "instrument": {
                        "title": "Instrument",
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "title": "Type",
                        "type": "string",
                        "enum": [
                            "PI",
                            "MEMBER"
                        ]
                    }
                }
            },
            "User": {
                "required": [
                    "instruments",
                    "working_groups"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "title": "Username",
                        "pattern": "^[\\w.@+-]+$",
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "title": "Email",
                        "type": "string",
                        "readOnly": true
                    },
                    "first_name": {
                        "title": "First name",
                        "type": "string",
                        "readOnly": true
                    },
                    "last_name": {
                        "title": "Last name",
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "title": "Role",
                        "type": "string",
                        "readOnly": true
                    },
                    "working_groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkingGroupMembership"
                        }
                    },
                    "instruments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InstrumentMembership"
                        }
                    }
                }
            },
            "UvtEvent": {
                "required": [
                    "count",
                    "mnemonic"
                ],
                "type": "object",
                "properties": {
                    "time": {
                        "title": "Time",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "type": "string"
                    },
                    "source": {
                        "title": "Source",
                        "type": "string",
                        "readOnly": true
                    },
                    "count": {
                        "title": "Count",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer"
                    },
                    "duration": {
                        "title": "Duration",
                        "maxLength": 64,
                        "type": "string",
                        "nullable": true
                    },
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            },
            "UvtEventFile": {
                "required": [
                    "mnemonic",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "mnemonic": {
                        "title": "Mnemonic",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    },
                    "name": {
                        "title": "Name",
                        "maxLength": 128,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "title": "Description",
                        "maxLength": 1024,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "ApiVersion": {
                "required": [
                    "version"
                ],
                "type": "object",
                "properties": {
                    "version": {
                        "title": "Version",
                        "maxLength": 64,
                        "minLength": 1,
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "JWT": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "x-original-swagger-version": "2.0"
}